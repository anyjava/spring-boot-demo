buildscript { ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

jar {
	baseName = 'demo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

sourceSets {
	generated {
		java {
			srcDirs = ['src/main/generated']
		}
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.projectlombok:lombok:1.16.6')
	//compile('org.springframework.boot:spring-boot-starter-security')
	//compile('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2:1.11')
	runtime('com.h2database:h2')

    compile('com.mysema.querydsl:querydsl-jpa:3.6.9')
    compile('com.mysema.querydsl:querydsl-apt:3.6.9')

	//runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test:4.0.3.RELEASE')
}


task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

checkstyle {
    toolVersion = '6.12'
    configFile = file("${project.rootDir}/config/checkstyle/woowa_checks.xml")
    sourceSets = [sourceSets.main, sourceSets.test]
}

checkstyleMain {
    outputs.upToDateWhen { false }
}

checkstyleTest {
    outputs.upToDateWhen { false }
}

pmd {
    ruleSets = [
        "java-basic",
        "java-braces"
    ]

    sourceSets = [sourceSets.main, sourceSets.test]
}

findbugs {
    sourceSets = [sourceSets.main, sourceSets.test]
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}

idea {
    module {
        sourceDirs += file('src/querydsl/')
    }
}
